#!/usr/bin/env python3
"""
TutorAI API Test Script
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö API endpoints
"""

import requests
import json
from datetime import date, timedelta
from typing import Dict, Any

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BASE_URL = "http://localhost:8000"
HEADERS = {
    "accept": "application/json",
    "Content-Type": "application/json"
}

class TutorAITester:
    """–ö–ª–∞—Å—Å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è TutorAI API"""
    
    def __init__(self, base_url: str = BASE_URL):
        self.base_url = base_url
        self.session = requests.Session()
        self.session.headers.update(HEADERS)
    
    def test_health(self) -> bool:
        """–¢–µ—Å—Ç health check"""
        print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ health check...")
        try:
            response = self.session.get(f"{self.base_url}/health")
            if response.status_code == 200:
                data = response.json()
                print(f"‚úÖ Health check: {data}")
                return True
            else:
                print(f"‚ùå Health check failed: {response.status_code}")
                return False
        except Exception as e:
            print(f"‚ùå Health check error: {e}")
            return False
    
    def test_students_api(self) -> bool:
        """–¢–µ—Å—Ç API —Å—Ç—É–¥–µ–Ω—Ç–æ–≤"""
        print("\nüë• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å—Ç—É–¥–µ–Ω—Ç–æ–≤...")
        
        try:
            # 1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
            print("  üìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤...")
            response = self.session.get(f"{self.base_url}/api/v1/students/")
            if response.status_code == 200:
                data = response.json()
                print(f"  ‚úÖ –°—Ç—É–¥–µ–Ω—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã: {data.get('total', 0)} –∑–∞–ø–∏—Å–µ–π")
            else:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: {response.status_code}")
                return False
            
            # 2. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
            print("  ‚ûï –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞...")
            student_data = {
                "name": "–¢–µ—Å—Ç–æ–≤—ã–π –°—Ç—É–¥–µ–Ω—Ç",
                "phone": "+79999999999",
                "telegram_user_id": 999999999,
                "telegram_username": "test_student",
                "is_active": True
            }
            response = self.session.post(f"{self.base_url}/api/v1/students/", json=student_data)
            if response.status_code == 200:
                created_student = response.json()
                print(f"  ‚úÖ –°—Ç—É–¥–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω: ID {created_student.get('student_id')}")
                student_id = created_student.get('student_id')
            else:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞: {response.status_code}")
                print(f"  üìù –û—Ç–≤–µ—Ç: {response.text}")
                return False
            
            # 3. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ –ø–æ ID
            print("  üîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ –ø–æ ID...")
            response = self.session.get(f"{self.base_url}/api/v1/students/{student_id}")
            if response.status_code == 200:
                student = response.json()
                print(f"  ‚úÖ –°—Ç—É–¥–µ–Ω—Ç –ø–æ–ª—É—á–µ–Ω: {student.get('name')}")
            else:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞: {response.status_code}")
            
            # 4. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∞–∫—Ç–æ–≤ –æ —Å—Ç—É–¥–µ–Ω—Ç–µ
            print("  üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∞–∫—Ç–æ–≤ –æ —Å—Ç—É–¥–µ–Ω—Ç–µ...")
            week_start = date.today() - timedelta(days=7)
            week_end = date.today()
            response = self.session.get(
                f"{self.base_url}/api/v1/students/{student_id}/facts",
                params={"week_start": week_start, "week_end": week_end}
            )
            if response.status_code == 200:
                facts = response.json()
                print(f"  ‚úÖ –§–∞–∫—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã: {len(facts.get('assignments', {}))} –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
            else:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–∫—Ç–æ–≤: {response.status_code}")
            
            return True
            
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: {e}")
            return False
    
    def test_materials_api(self) -> bool:
        """–¢–µ—Å—Ç API –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤"""
        print("\nüìö –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤...")
        
        try:
            # 1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
            print("  üìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤...")
            response = self.session.get(f"{self.base_url}/api/v1/materials/")
            if response.status_code == 200:
                data = response.json()
                print(f"  ‚úÖ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ–ª—É—á–µ–Ω—ã: {data.get('total', 0)} –∑–∞–ø–∏—Å–µ–π")
            else:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: {response.status_code}")
                return False
            
            # 2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
            print("  üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤...")
            response = self.session.get(f"{self.base_url}/api/v1/materials/stats/")
            if response.status_code == 200:
                stats = response.json()
                print(f"  ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats}")
            else:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {response.status_code}")
            
            # 3. –ü–æ–∏—Å–∫ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
            print("  üîç –ü–æ–∏—Å–∫ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤...")
            response = self.session.get(f"{self.base_url}/api/v1/materials/search/?q=—Ç–µ—Å—Ç")
            if response.status_code == 200:
                data = response.json()
                print(f"  ‚úÖ –ü–æ–∏—Å–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω: {data.get('total', 0)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
            else:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {response.status_code}")
            
            return True
            
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: {e}")
            return False
    
    def test_messages_api(self) -> bool:
        """–¢–µ—Å—Ç API —Å–æ–æ–±—â–µ–Ω–∏–π"""
        print("\nüí¨ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å–æ–æ–±—â–µ–Ω–∏–π...")
        
        try:
            # 1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
            print("  üìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π...")
            response = self.session.get(f"{self.base_url}/api/v1/messages/")
            if response.status_code == 200:
                data = response.json()
                print(f"  ‚úÖ –°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã: {data.get('total', 0)} –∑–∞–ø–∏—Å–µ–π")
            else:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π: {response.status_code}")
                return False
            
            # 2. –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            print("  ‚ûï –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è...")
            message_data = {
                "chat_id": 123456789,
                "sender_type": "user",
                "sender_id": 1,
                "text_content": "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç API"
            }
            response = self.session.post(f"{self.base_url}/api/v1/messages/", json=message_data)
            if response.status_code == 200:
                message = response.json()
                print(f"  ‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ: ID {message.get('message_id')}")
                message_id = message.get('message_id')
            else:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {response.status_code}")
                print(f"  üìù –û—Ç–≤–µ—Ç: {response.text}")
                return False
            
            # 3. –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞
            print("  ü§ñ –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞...")
            bot_response_data = {
                "text_content": "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç –±–æ—Ç–∞"
            }
            response = self.session.post(
                f"{self.base_url}/api/v1/messages/{message_id}/bot-response",
                json=bot_response_data
            )
            if response.status_code == 200:
                bot_response = response.json()
                print(f"  ‚úÖ –û—Ç–≤–µ—Ç –±–æ—Ç–∞ —Å–æ–∑–¥–∞–Ω: ID {bot_response.get('response_id')}")
            else:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞: {response.status_code}")
            
            return True
            
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")
            return False
    
    def test_rating_api(self) -> bool:
        """–¢–µ—Å—Ç API —Ä–µ–π—Ç–∏–Ω–≥–∞"""
        print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Ä–µ–π—Ç–∏–Ω–≥–∞...")
        
        try:
            # 1. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ—Ç–æ–∫–æ–≤
            print("  üìã –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ—Ç–æ–∫–æ–≤...")
            response = self.session.get(f"{self.base_url}/api/v1/rating/streams")
            if response.status_code == 200:
                streams = response.json()
                print(f"  ‚úÖ –ü–æ—Ç–æ–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã: {len(streams)} –∑–∞–ø–∏—Å–µ–π")
            else:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Ç–æ–∫–æ–≤: {response.status_code}")
                return False
            
            # 2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø–æ—Ç–æ–∫–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å –ø–æ—Ç–æ–∫–∏)
            if streams:
                stream_id = streams[0].get('stream_id')
                print(f"  üë• –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø–æ—Ç–æ–∫–∞ {stream_id}...")
                response = self.session.get(f"{self.base_url}/api/v1/rating/streams/{stream_id}/students")
                if response.status_code == 200:
                    students_data = response.json()
                    print(f"  ‚úÖ –°—Ç—É–¥–µ–Ω—Ç—ã –ø–æ—Ç–æ–∫–∞: {students_data.get('total_count', 0)} –∑–∞–ø–∏—Å–µ–π")
                else:
                    print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø–æ—Ç–æ–∫–∞: {response.status_code}")
            
            # 3. –ü–æ–ª—É—á–µ–Ω–∏–µ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
            if streams:
                stream_id = streams[0].get('stream_id')
                print(f"  üìà –ü–æ–ª—É—á–µ–Ω–∏–µ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –¥–ª—è –ø–æ—Ç–æ–∫–∞ {stream_id}...")
                week_start = date.today() - timedelta(days=7)
                week_end = date.today()
                response = self.session.get(
                    f"{self.base_url}/api/v1/rating/streams/{stream_id}/weekly-report",
                    params={"week_start": week_start, "week_end": week_end}
                )
                if response.status_code == 200:
                    report = response.json()
                    print(f"  ‚úÖ –û—Ç—á–µ—Ç –ø–æ–ª—É—á–µ–Ω: {report.get('active_students', 0)} –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤")
                else:
                    print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞: {response.status_code}")
            
            return True
            
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞: {e}")
            return False
    
    def run_all_tests(self) -> Dict[str, bool]:
        """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"""
        print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è TutorAI API")
        print("=" * 50)
        
        results = {}
        
        # –¢–µ—Å—Ç health check
        results['health'] = self.test_health()
        
        # –¢–µ—Å—Ç API —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
        results['students'] = self.test_students_api()
        
        # –¢–µ—Å—Ç API –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
        results['materials'] = self.test_materials_api()
        
        # –¢–µ—Å—Ç API —Å–æ–æ–±—â–µ–Ω–∏–π
        results['messages'] = self.test_messages_api()
        
        # –¢–µ—Å—Ç API —Ä–µ–π—Ç–∏–Ω–≥–∞
        results['rating'] = self.test_rating_api()
        
        # –ò—Ç–æ–≥–∏
        print("\n" + "=" * 50)
        print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
        print("=" * 50)
        
        passed = sum(results.values())
        total = len(results)
        
        for test_name, result in results.items():
            status = "‚úÖ –ü–†–û–ô–î–ï–ù" if result else "‚ùå –ü–†–û–í–ê–õ–ï–ù"
            print(f"{test_name.upper()}: {status}")
        
        print(f"\n–ò—Ç–æ–≥–æ: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
        
        if passed == total:
            print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
        
        return results

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("TutorAI API Test Suite")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ http://localhost:8000")
    print()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–µ—Ä–∞
    tester = TutorAITester()
    
    # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
    results = tester.run_all_tests()
    
    # –í–æ–∑–≤—Ä–∞—Ç –∫–æ–¥–∞ –≤—ã—Ö–æ–¥–∞
    if all(results.values()):
        exit(0)
    else:
        exit(1)

if __name__ == "__main__":
    main()

